diff -ru dpkg-1.8.3.1/archtable dpkg-1.8.3.1-patched/archtable
--- dpkg-1.8.3.1/archtable	Fri Jan 12 14:55:49 2001
+++ dpkg-1.8.3.1-patched/archtable	Fri May  4 13:27:22 2001
@@ -43,4 +43,6 @@
 s390-linux-gnu		s390		s390
 s390-ibm-linux-gnu	s390		s390
 s390-unknown-linux-gnu	s390		s390
+powerpc-darwin		darwin-powerpc	darwin-powerpc
+i386-darwin		darwin-i386	darwin-i386
 
diff -ru dpkg-1.8.3.1/lib/Makefile.in dpkg-1.8.3.1-patched/lib/Makefile.in
--- dpkg-1.8.3.1/lib/Makefile.in	Sun May 21 19:22:34 2000
+++ dpkg-1.8.3.1-patched/lib/Makefile.in	Fri May  4 13:27:22 2001
@@ -16,9 +16,10 @@
 
 .PHONY: all
 all:: libdpkg.a
-	
+
 libdpkg.a: $(OBJECTS)
 	$(AR) r $@ $^
+	ranlib $@
 
 .PHONY: install
 install:: all
diff -ru dpkg-1.8.3.1/lib/tarfn.c dpkg-1.8.3.1-patched/lib/tarfn.c
--- dpkg-1.8.3.1/lib/tarfn.c	Sun May 21 19:22:35 2000
+++ dpkg-1.8.3.1-patched/lib/tarfn.c	Fri May  4 14:53:59 2001
@@ -122,8 +122,19 @@
 
 		if ( !DecodeTarHeader(buffer, &h) ) {
 			if ( h.Name[0] == '\0' ) {
+			  int i, bogus = 0;
+			  for (i = 0; i < 512; i++) {
+			    if (buffer[i]) {
+			      bogus = 1;
+			    }
+			  }
+			  if (bogus)
+			    fprintf(stderr, "FINK-DEBUG: Returning after bogus end-of-file header\n");
+			  else
+			    fprintf(stderr, "FINK-DEBUG: Returning after genuine end-of-file header\n");
 				return 0;	/* End of tape */
 			} else {
+			  fprintf(stderr, "FINK-DEBUG: Returning after broken header\n");
 				errno = 0;	/* Indicates broken tarfile */
 				return -1;	/* Header checksum error */
 			}
@@ -140,6 +151,7 @@
                next_long_link = 0;
 
 		if ( h.Name[0] == '\0' ) {
+		  fprintf(stderr, "FINK-DEBUG: Returning after non-broken, empty header\n");
 			errno = 0;	/* Indicates broken tarfile */
 			return -1;	/* Bad header data */
 		}
@@ -183,6 +195,7 @@
 
                  if (NULL == (*longp = (char *)malloc(h.Size))) {
                    /* malloc failed, so bail */
+		   fprintf(stderr, "FINK-DEBUG: malloc() failed in long name handling\n");
                    errno = 0;
                    return -1;
                  }
@@ -202,9 +215,11 @@
                    // if we didn't get 512 bytes read, punt
                    if (512 != status) {
 		     if ( status > 0 ) { /* Read partial header record */
+		       fprintf(stderr, "FINK-DEBUG: Returning after partial long-name header\n");
 		       errno = 0;
 		       return -1;
 		     } else {
+		       fprintf(stderr, "FINK-DEBUG: Returning after end-of-file in long-name header\n");
                        return status;
                      }
 		   }
@@ -220,16 +235,21 @@
                  status = 0;
                  break;
 		default:
+		  fprintf(stderr, "FINK-DEBUG: Returning after illegal header type\n");
 			errno = 0;	/* Indicates broken tarfile */
 			return -1;	/* Bad header field */
 		}
-		if ( status != 0 )
+		if ( status != 0 ) {
+		  fprintf(stderr, "FINK-DEBUG: Returning after error in coroutine\n");
 			return status;	/* Pass on status from coroutine */
+		}
 	}
 	if ( status > 0 ) {	/* Read partial header record */
 		errno = 0;	/* Indicates broken tarfile */
+		fprintf(stderr, "FINK-DEBUG: stopping after partial header read\n");
 		return -1;
 	} else {
+	  fprintf(stderr, "FINK-DEBUG: Returning normally with %d\n", status);
 		return status;	/* Whatever I/O function returned */
 	}
 }
diff -ru dpkg-1.8.3.1/main/archives.c dpkg-1.8.3.1-patched/main/archives.c
--- dpkg-1.8.3.1/main/archives.c	Fri Jan 12 17:02:12 2001
+++ dpkg-1.8.3.1-patched/main/archives.c	Fri May  4 16:12:29 2001
@@ -47,6 +47,27 @@
 struct pkginfo *conflictor[20];
 int cflict_index = 0;
 
+/* special routine to handle partial reads from the tarfile */
+static int safe_read(int fd, void *buf, int len)
+{
+  int r, have = 0;
+  char *p = (char *)buf;
+  while (have < len) {
+    if ((r = read(fd,p,len-have)) == -1) {
+      if (errno == EINTR || errno == EAGAIN) continue;
+      return r;
+    }
+    if (r == 0)
+      break;
+    have += r;
+    p += r;
+  }
+  if (have<len) {
+    fprintf(stderr, "FINK-DEBUG: partial read from dpkg-deb pipe: %d instead of %d\n", have, len);
+  }
+  return have;
+}
+
 int filesavespackage(struct fileinlist *file, struct pkginfo *pkgtobesaved,
                      struct pkginfo *pkgbeinginstalled) {
   struct pkginfo *divpkg, *thirdpkg;
@@ -118,7 +139,7 @@
 int tarfileread(void *ud, char *buf, int len) {
   struct tarcontext *tc= (struct tarcontext*)ud;
   int r;
-  if ((r= read(tc->backendpipe,buf,len)) == -1)
+  if ((r= safe_read(tc->backendpipe,buf,len)) == -1)
     ohshite(_("error reading from dpkg-deb pipe"));
   return r;
 }
@@ -396,7 +417,7 @@
           (unsigned long)ti->Size);
     fd_fd_copy(tc->backendpipe, fd, ti->Size, _("backend dpkg-deb during `%.255s'"),ti->Name);
     r= ti->Size % TARBLKSZ;
-    if (r > 0) r= read(tc->backendpipe,databuf,TARBLKSZ - r);
+    if (r > 0) r= safe_read(tc->backendpipe,databuf,TARBLKSZ - r);
     if (nifd->namenode->statoverride) 
       debug(dbg_eachfile, "tarobject ... stat override, uid=%d, gid=%d, mode=%04o",
 			  nifd->namenode->statoverride->uid,
@@ -442,12 +463,10 @@
     debug(dbg_eachfiledetail,"tarobject SymbolicLink creating");
 #ifdef HAVE_LCHOWN
     if (lchown(fnamenewvb.buf,
-#else
-    if (chown(fnamenewvb.buf,
-#endif
 	    nifd->namenode->statoverride ? nifd->namenode->statoverride->uid : ti->UserID,
 	    nifd->namenode->statoverride ? nifd->namenode->statoverride->gid : ti->GroupID))
       ohshite(_("error setting ownership of symlink `%.255s'"),ti->Name);
+#endif
     break;
   case Directory:
     /* We've already checked for an existing directory. */
@@ -503,10 +522,8 @@
         ohshite(_("unable to make backup symlink for `%.255s'"),ti->Name);
 #ifdef HAVE_LCHOWN
       if (lchown(fnametmpvb.buf,stab.st_uid,stab.st_gid))
-#else
-      if (chown(fnametmpvb.buf,stab.st_uid,stab.st_gid))
-#endif
         ohshite(_("unable to chown backup symlink for `%.255s'"),ti->Name);
+#endif
     } else {
       debug(dbg_eachfiledetail,"tarobject nondirectory, `link' backup");
       if (link(fnamevb.buf,fnametmpvb.buf))
diff -ru dpkg-1.8.3.1/main/configure.c dpkg-1.8.3.1-patched/main/configure.c
--- dpkg-1.8.3.1/main/configure.c	Thu Aug 24 22:34:56 2000
+++ dpkg-1.8.3.1-patched/main/configure.c	Fri May  4 13:27:22 2001
@@ -340,8 +340,10 @@
           " I do not mess up your careful work.\n"),
                     cdr.buf, cdr2.buf);
 
+#ifndef __APPLE__
             s= getenv(NOJOBCTRLSTOPENV);
             if (s && *s) {
+#endif
               fputs(_("Type `exit' when you're done.\n"),stderr);
               if (!(c1= m_fork())) {
                 s= getenv(SHELLENV);
@@ -351,11 +353,13 @@
               }
               while ((r= waitpid(c1,&status,0)) == -1 && errno == EINTR);
               if (r != c1) { onerr_abort++; ohshite(_("wait for shell failed")); }
+#ifndef __APPLE__
             } else {
               fputs(_("Don't forget to foreground (`fg') this "
                     "process when you're done !\n"),stderr);
               kill(-getpgid(0),SIGTSTP);
             }
+#endif
           }
 
         } while (!strchr("yino",cc));
diff -ru dpkg-1.8.3.1/main/help.c dpkg-1.8.3.1-patched/main/help.c
--- dpkg-1.8.3.1/main/help.c	Fri Jan 12 17:02:12 2001
+++ dpkg-1.8.3.1-patched/main/help.c	Fri May  4 13:27:22 2001
@@ -69,7 +69,7 @@
 
 void checkpath(void) {
 /* Verify that some programs can be found in the PATH. */
-  static const char *const checklist[]= { "ldconfig", 
+  static const char *const checklist[]= {
 #ifdef USE_START_STOP_DAEMON
     "start-stop-daemon",
 #endif    
diff -ru dpkg-1.8.3.1/optlib/Makefile.in dpkg-1.8.3.1-patched/optlib/Makefile.in
--- dpkg-1.8.3.1/optlib/Makefile.in	Wed Dec 15 16:29:16 1999
+++ dpkg-1.8.3.1-patched/optlib/Makefile.in	Fri May  4 13:27:22 2001
@@ -11,9 +11,10 @@
 
 .PHONY: all
 all:: libopt.a
-	
+
 libopt.a: $(OBJECTS)
 	$(AR) r $@ $^
+	ranlib $@
 
 .PHONY: install
 install:: all
diff -ru dpkg-1.8.3.1/scripts/dpkg-architecture.pl dpkg-1.8.3.1-patched/scripts/dpkg-architecture.pl
--- dpkg-1.8.3.1/scripts/dpkg-architecture.pl	Fri Jan 12 14:56:09 2001
+++ dpkg-1.8.3.1-patched/scripts/dpkg-architecture.pl	Fri May  4 13:27:22 2001
@@ -61,7 +61,9 @@
 	    'hppa',      'hppa-linux',
 	    'hurd-i386', 'i386-gnu',
 	    's390',	 's390-linux',
-	    'freebsd-i386', 'i386-freebsd');
+	    'freebsd-i386', 'i386-freebsd',
+	    'darwin-powerpc', 'powerpc-darwin',
+	    'darwin-i386', 'i386-darwin');
 
 sub usageversion {
     print STDERR
