--- xpdf/Makefile.in	Fri Feb 23 19:50:59 2001
+++ xpdf/Makefile.in	Fri Feb 23 19:51:33 2001
@@ -91,7 +91,7 @@
 	Link.o LTKOutputDev.o Object.o OutputDev.o Page.o Params.o \
 	Parser.o PDFDoc.o PSOutputDev.o SFont.o Stream.o T1Font.o \
 	TextOutputDev.o TTFont.o XOutputDev.o XRef.o xpdf.o
-XPDF_LIBS = -L$(LTKLIBDIR) -lLTK -L$(GOOLIBDIR) -lGoo $(XLIBS) $(OTHERLIBS) -lm
+XPDF_LIBS = -L$(LTKLIBDIR) -lLTK -L$(GOOLIBDIR) -lGoo $(XLIBS) $(OTHERLIBS)
 
 xpdf$(EXE): $(XPDF_OBJS) \
 	    $(GOOLIBDIR)/$(LIBPREFIX)Goo.a $(LTKLIBDIR)/$(LIBPREFIX)LTK.a
@@ -108,7 +108,7 @@
 	FontEncoding.o FontFile.o FormWidget.o Gfx.o GfxFont.o \
 	GfxState.o Lexer.o Link.o Object.o OutputDev.o Page.o Params.o \
 	Parser.o PDFDoc.o PSOutputDev.o Stream.o XRef.o pdftops.o
-PDFTOPS_LIBS = -L$(GOOLIBDIR) -lGoo $(OTHERLIBS) -lm
+PDFTOPS_LIBS = -L$(GOOLIBDIR) -lGoo $(OTHERLIBS)
 
 pdftops$(EXE): $(PDFTOPS_OBJS) $(GOOLIBDIR)/$(LIBPREFIX)Goo.a
 	$(CXX) $(CXXFLAGS) $(LDFLAGS) -o pdftops$(EXE) $(PDFTOPS_OBJS) \
@@ -120,7 +120,7 @@
 	FontEncoding.o FontFile.o FormWidget.o Gfx.o GfxFont.o \
 	GfxState.o Lexer.o Link.o Object.o OutputDev.o Page.o Params.o \
 	Parser.o PDFDoc.o TextOutputDev.o Stream.o XRef.o pdftotext.o
-PDFTOTEXT_LIBS = -L$(GOOLIBDIR) -lGoo $(OTHERLIBS) -lm
+PDFTOTEXT_LIBS = -L$(GOOLIBDIR) -lGoo $(OTHERLIBS) 
 
 pdftotext$(EXE): $(PDFTOTEXT_OBJS) $(GOOLIBDIR)/$(LIBPREFIX)Goo.a
 	$(CXX) $(CXXFLAGS) $(LDFLAGS) -o pdftotext$(EXE) $(PDFTOTEXT_OBJS) \
@@ -132,7 +132,7 @@
 	FontEncoding.o FontFile.o FormWidget.o Gfx.o GfxFont.o \
 	GfxState.o Lexer.o Link.o Object.o OutputDev.o Page.o Params.o \
 	Parser.o PDFDoc.o Stream.o XRef.o pdfinfo.o
-PDFINFO_LIBS = -L$(GOOLIBDIR) -lGoo $(OTHERLIBS) -lm
+PDFINFO_LIBS = -L$(GOOLIBDIR) -lGoo $(OTHERLIBS) 
 
 pdfinfo$(EXE): $(PDFINFO_OBJS) $(GOOLIBDIR)/$(LIBPREFIX)Goo.a
 	$(CXX) $(CXXFLAGS) $(LDFLAGS) -o pdfinfo$(EXE) $(PDFINFO_OBJS) \
@@ -145,7 +145,7 @@
 	GfxState.o Lexer.o Link.o Object.o OutputDev.o PBMOutputDev.o \
 	Page.o Params.o Parser.o PDFDoc.o SFont.o Stream.o T1Font.o \
 	TextOutputDev.o TTFont.o XOutputDev.o XRef.o pdftopbm.o
-PDFTOPBM_LIBS = -L$(GOOLIBDIR) -lGoo $(XLIBS) $(OTHERLIBS) -lm
+PDFTOPBM_LIBS = -L$(GOOLIBDIR) -lGoo $(XLIBS) $(OTHERLIBS) 
 
 pdftopbm$(EXE): $(PDFTOPBM_OBJS) $(GOOLIBDIR)/$(LIBPREFIX)Goo.a
 	$(CXX) $(CXXFLAGS) $(LDFLAGS) -o pdftopbm$(EXE) $(PDFTOPBM_OBJS) \
@@ -157,7 +157,7 @@
 	FontEncoding.o FontFile.o FormWidget.o Gfx.o GfxFont.o \
 	GfxState.o ImageOutputDev.o Lexer.o Link.o Object.o OutputDev.o \
 	Page.o Params.o Parser.o PDFDoc.o Stream.o XRef.o pdfimages.o
-PDFIMAGES_LIBS = -L$(GOOLIBDIR) -lGoo $(OTHERLIBS) -lm
+PDFIMAGES_LIBS = -L$(GOOLIBDIR) -lGoo $(OTHERLIBS) 
 
 pdfimages$(EXE): $(PDFIMAGES_OBJS) $(GOOLIBDIR)/$(LIBPREFIX)Goo.a
 	$(CXX) $(CXXFLAGS) $(LDFLAGS) -o pdfimages$(EXE) $(PDFIMAGES_OBJS) \
--- configure	Sat Feb 24 06:06:19 2001
+++ configure	Sat Feb 24 06:09:23 2001
@@ -47,9 +47,9 @@
   # called.  Once this macro is called once, subsequent calls will be
   # nice and zippy.
   : ${lhs_pad=""}
-  while `echo "$lhs_pad" | grep -v "[ ]\{$lhs_column\}" > /dev/null 2>&1`; do
-    lhs_pad=" $lhs_pad"
-  done
+# while `echo "$lhs_pad" | grep -v "[ ]\{$lhs_column\}" > /dev/null 2>&1`; do
+#   lhs_pad=" $lhs_pad"
+# done
 
   lhs="${lhs}${lhs_pad}"
 Xpm_library_help_string=`echo "$lhs" | sed -n -e "/.\{$lhs_column\}[ ][ ]*$/ s/\(.\{$rhs_column\}\).*/\1$rhs/p"`
@@ -62,9 +62,10 @@
   # `grep') only the first time AC_HELP_STRING is called.  Once this
   # macro is called once, subsequent calls will be nice and zippy.
   : ${rhs_pad=""}
-  while `echo "$rhs_pad" | grep -v "[ ]\{$rhs_column\}" > /dev/null 2>&1`; do
-    rhs_pad=" $rhs_pad"
-  done
+# while `echo "$rhs_pad" | grep -v "[ ]\{$rhs_column\}" > /dev/null 2>&1`; do
+#   rhs_pad=" $rhs_pad"
+# done
+
 
   # Strip all leading spaces from the RHS.
   rhs=`echo "$rhs" | sed -n -e "s/[ ]*\(.*\)/\1/p"`
@@ -93,9 +94,9 @@
   # called.  Once this macro is called once, subsequent calls will be
   # nice and zippy.
   : ${lhs_pad=""}
-  while `echo "$lhs_pad" | grep -v "[ ]\{$lhs_column\}" > /dev/null 2>&1`; do
-    lhs_pad=" $lhs_pad"
-  done
+# while `echo "$lhs_pad" | grep -v "[ ]\{$lhs_column\}" > /dev/null 2>&1`; do
+#   lhs_pad=" $lhs_pad"
+# done
 
   lhs="${lhs}${lhs_pad}"
 Xpm_includes_help_string=`echo "$lhs" | sed -n -e "/.\{$lhs_column\}[ ][ ]*$/ s/\(.\{$rhs_column\}\).*/\1$rhs/p"`
@@ -108,9 +109,9 @@
   # `grep') only the first time AC_HELP_STRING is called.  Once this
   # macro is called once, subsequent calls will be nice and zippy.
   : ${rhs_pad=""}
-  while `echo "$rhs_pad" | grep -v "[ ]\{$rhs_column\}" > /dev/null 2>&1`; do
-    rhs_pad=" $rhs_pad"
-  done
+# while `echo "$rhs_pad" | grep -v "[ ]\{$rhs_column\}" > /dev/null 2>&1`; do
+#   rhs_pad=" $rhs_pad"
+# done
 
   # Strip all leading spaces from the RHS.
   rhs=`echo "$rhs" | sed -n -e "s/[ ]*\(.*\)/\1/p"`
@@ -139,9 +140,9 @@
   # called.  Once this macro is called once, subsequent calls will be
   # nice and zippy.
   : ${lhs_pad=""}
-  while `echo "$lhs_pad" | grep -v "[ ]\{$lhs_column\}" > /dev/null 2>&1`; do
-    lhs_pad=" $lhs_pad"
-  done
+# while `echo "$lhs_pad" | grep -v "[ ]\{$lhs_column\}" > /dev/null 2>&1`; do
+#   lhs_pad=" $lhs_pad"
+# done
 
   lhs="${lhs}${lhs_pad}"
 t1_library_help_string=`echo "$lhs" | sed -n -e "/.\{$lhs_column\}[ ][ ]*$/ s/\(.\{$rhs_column\}\).*/\1$rhs/p"`
@@ -154,9 +155,9 @@
   # `grep') only the first time AC_HELP_STRING is called.  Once this
   # macro is called once, subsequent calls will be nice and zippy.
   : ${rhs_pad=""}
-  while `echo "$rhs_pad" | grep -v "[ ]\{$rhs_column\}" > /dev/null 2>&1`; do
-    rhs_pad=" $rhs_pad"
-  done
+# while `echo "$rhs_pad" | grep -v "[ ]\{$rhs_column\}" > /dev/null 2>&1`; do
+#   rhs_pad=" $rhs_pad"
+# done
 
   # Strip all leading spaces from the RHS.
   rhs=`echo "$rhs" | sed -n -e "s/[ ]*\(.*\)/\1/p"`
@@ -185,9 +186,9 @@
   # called.  Once this macro is called once, subsequent calls will be
   # nice and zippy.
   : ${lhs_pad=""}
-  while `echo "$lhs_pad" | grep -v "[ ]\{$lhs_column\}" > /dev/null 2>&1`; do
-    lhs_pad=" $lhs_pad"
-  done
+# while `echo "$lhs_pad" | grep -v "[ ]\{$lhs_column\}" > /dev/null 2>&1`; do
+#   lhs_pad=" $lhs_pad"
+# done
 
   lhs="${lhs}${lhs_pad}"
 t1_includes_help_string=`echo "$lhs" | sed -n -e "/.\{$lhs_column\}[ ][ ]*$/ s/\(.\{$rhs_column\}\).*/\1$rhs/p"`
@@ -200,9 +201,9 @@
   # `grep') only the first time AC_HELP_STRING is called.  Once this
   # macro is called once, subsequent calls will be nice and zippy.
   : ${rhs_pad=""}
-  while `echo "$rhs_pad" | grep -v "[ ]\{$rhs_column\}" > /dev/null 2>&1`; do
-    rhs_pad=" $rhs_pad"
-  done
+# while `echo "$rhs_pad" | grep -v "[ ]\{$rhs_column\}" > /dev/null 2>&1`; do
+#   rhs_pad=" $rhs_pad"
+# done
 
   # Strip all leading spaces from the RHS.
   rhs=`echo "$rhs" | sed -n -e "s/[ ]*\(.*\)/\1/p"`
@@ -231,9 +232,9 @@
   # called.  Once this macro is called once, subsequent calls will be
   # nice and zippy.
   : ${lhs_pad=""}
-  while `echo "$lhs_pad" | grep -v "[ ]\{$lhs_column\}" > /dev/null 2>&1`; do
-    lhs_pad=" $lhs_pad"
-  done
+# while `echo "$lhs_pad" | grep -v "[ ]\{$lhs_column\}" > /dev/null 2>&1`; do
+#   lhs_pad=" $lhs_pad"
+# done
 
   lhs="${lhs}${lhs_pad}"
 freetype_library_help_string=`echo "$lhs" | sed -n -e "/.\{$lhs_column\}[ ][ ]*$/ s/\(.\{$rhs_column\}\).*/\1$rhs/p"`
@@ -246,12 +247,13 @@
   # `grep') only the first time AC_HELP_STRING is called.  Once this
   # macro is called once, subsequent calls will be nice and zippy.
   : ${rhs_pad=""}
-  while `echo "$rhs_pad" | grep -v "[ ]\{$rhs_column\}" > /dev/null 2>&1`; do
-    rhs_pad=" $rhs_pad"
-  done
+# while `echo "$rhs_pad" | grep -v "[ ]\{$rhs_column\}" > /dev/null 2>&1`; do
+#   rhs_pad=" $rhs_pad"
+# done
 
   # Strip all leading spaces from the RHS.
   rhs=`echo "$rhs" | sed -n -e "s/[ ]*\(.*\)/\1/p"`
+exit
 
 freetype_library_help_string="$lhs
 ${rhs_pad}${rhs}"
@@ -277,9 +279,9 @@
   # called.  Once this macro is called once, subsequent calls will be
   # nice and zippy.
   : ${lhs_pad=""}
-  while `echo "$lhs_pad" | grep -v "[ ]\{$lhs_column\}" > /dev/null 2>&1`; do
-    lhs_pad=" $lhs_pad"
-  done
+# while `echo "$lhs_pad" | grep -v "[ ]\{$lhs_column\}" > /dev/null 2>&1`; do
+#   lhs_pad=" $lhs_pad"
+# done
 
   lhs="${lhs}${lhs_pad}"
 freetype_includes_help_string=`echo "$lhs" | sed -n -e "/.\{$lhs_column\}[ ][ ]*$/ s/\(.\{$rhs_column\}\).*/\1$rhs/p"`
@@ -292,9 +294,9 @@
   # `grep') only the first time AC_HELP_STRING is called.  Once this
   # macro is called once, subsequent calls will be nice and zippy.
   : ${rhs_pad=""}
-  while `echo "$rhs_pad" | grep -v "[ ]\{$rhs_column\}" > /dev/null 2>&1`; do
-    rhs_pad=" $rhs_pad"
-  done
+# while `echo "$rhs_pad" | grep -v "[ ]\{$rhs_column\}" > /dev/null 2>&1`; do
+#   rhs_pad=" $rhs_pad"
+# done
 
   # Strip all leading spaces from the RHS.
   rhs=`echo "$rhs" | sed -n -e "s/[ ]*\(.*\)/\1/p"`
@@ -323,9 +325,9 @@
   # called.  Once this macro is called once, subsequent calls will be
   # nice and zippy.
   : ${lhs_pad=""}
-  while `echo "$lhs_pad" | grep -v "[ ]\{$lhs_column\}" > /dev/null 2>&1`; do
-    lhs_pad=" $lhs_pad"
-  done
+# while `echo "$lhs_pad" | grep -v "[ ]\{$lhs_column\}" > /dev/null 2>&1`; do
+#   lhs_pad=" $lhs_pad"
+# done
 
   lhs="${lhs}${lhs_pad}"
 freetype_library_help_string=`echo "$lhs" | sed -n -e "/.\{$lhs_column\}[ ][ ]*$/ s/\(.\{$rhs_column\}\).*/\1$rhs/p"`
@@ -338,9 +340,9 @@
   # `grep') only the first time AC_HELP_STRING is called.  Once this
   # macro is called once, subsequent calls will be nice and zippy.
   : ${rhs_pad=""}
-  while `echo "$rhs_pad" | grep -v "[ ]\{$rhs_column\}" > /dev/null 2>&1`; do
-    rhs_pad=" $rhs_pad"
-  done
+# while `echo "$rhs_pad" | grep -v "[ ]\{$rhs_column\}" > /dev/null 2>&1`; do
+#   rhs_pad=" $rhs_pad"
+# done
 
   # Strip all leading spaces from the RHS.
   rhs=`echo "$rhs" | sed -n -e "s/[ ]*\(.*\)/\1/p"`
@@ -369,9 +371,9 @@
   # called.  Once this macro is called once, subsequent calls will be
   # nice and zippy.
   : ${lhs_pad=""}
-  while `echo "$lhs_pad" | grep -v "[ ]\{$lhs_column\}" > /dev/null 2>&1`; do
-    lhs_pad=" $lhs_pad"
-  done
+# while `echo "$lhs_pad" | grep -v "[ ]\{$lhs_column\}" > /dev/null 2>&1`; do
+#   lhs_pad=" $lhs_pad"
+# done
 
   lhs="${lhs}${lhs_pad}"
 freetype_includes_help_string=`echo "$lhs" | sed -n -e "/.\{$lhs_column\}[ ][ ]*$/ s/\(.\{$rhs_column\}\).*/\1$rhs/p"`
@@ -384,9 +386,9 @@
   # `grep') only the first time AC_HELP_STRING is called.  Once this
   # macro is called once, subsequent calls will be nice and zippy.
   : ${rhs_pad=""}
-  while `echo "$rhs_pad" | grep -v "[ ]\{$rhs_column\}" > /dev/null 2>&1`; do
-    rhs_pad=" $rhs_pad"
-  done
+# while `echo "$rhs_pad" | grep -v "[ ]\{$rhs_column\}" > /dev/null 2>&1`; do
+#   rhs_pad=" $rhs_pad"
+# done
 
   # Strip all leading spaces from the RHS.
   rhs=`echo "$rhs" | sed -n -e "s/[ ]*\(.*\)/\1/p"`
@@ -3606,7 +3608,7 @@
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   ac_save_LIBS="$LIBS"
-LIBS="$t1_CFLAGS $X_CFLAGS $t1_LIBS $X_LIBS $X_PRE_LIBS -lX11 $X_EXTRA_LIBS -lm $LIBS"
+LIBS="$t1_CFLAGS $X_CFLAGS $t1_LIBS $X_LIBS $X_PRE_LIBS -lX11 $X_EXTRA_LIBS  $LIBS"
 cat > conftest.$ac_ext <<EOF
 #line 3612 "configure"
 #include "confdefs.h"
@@ -3846,7 +3848,7 @@
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   ac_save_LIBS="$LIBS"
-LIBS="$freetype_CFLAGS $X_CFLAGS $freetype_LIBS $X_LIBS $X_PRE_LIBS -lX11 $X_EXTRA_LIBS -lm $LIBS"
+LIBS="$freetype_CFLAGS $X_CFLAGS $freetype_LIBS $X_LIBS $X_PRE_LIBS -lX11 $X_EXTRA_LIBS $LIBS"
 cat > conftest.$ac_ext <<EOF
 #line 3852 "configure"
 #include "confdefs.h"
@@ -4082,7 +4084,7 @@
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   ac_save_LIBS="$LIBS"
-LIBS="$freetype_CFLAGS $X_CFLAGS $freetype_LIBS $X_LIBS $X_PRE_LIBS -lX11 $X_EXTRA_LIBS -lm $LIBS"
+LIBS="$freetype_CFLAGS $X_CFLAGS $freetype_LIBS $X_LIBS $X_PRE_LIBS -lX11 $X_EXTRA_LIBS $LIBS"
 cat > conftest.$ac_ext <<EOF
 #line 4088 "configure"
 #include "confdefs.h"
